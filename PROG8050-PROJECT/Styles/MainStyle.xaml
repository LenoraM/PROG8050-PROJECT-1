<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- Menu Button -->
	<Style x:Key="MenuButtonStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="Transparent"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="Regular"/>
		<Setter Property="Height" Value="50"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="45"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<!-- Selected  -->
							<Border x:Name="btnSelected" Grid.ColumnSpan="2" CornerRadius="4" Width="210" HorizontalAlignment="Right"/>

							<!-- Indicator -->
							<Rectangle Name="Indicator" HorizontalAlignment="Left" Width="4" Height="40" VerticalAlignment="Center" RadiusX="2" RadiusY="2"/>

							<!-- Icon -->
							<Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Height="24" Width="24" Stretch="None" Fill="{DynamicResource SecundaryIconColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>

							<!-- Text -->
							<TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 0 0 0"
                                                Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource FourthTextColor}"/>
							<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource FourthTextColor}"/>
							
							<!-- Indicator -->
							<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="Indicator" Property="Height" Value="20"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
							<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
							<Setter TargetName="Indicator" Property="Height" Value="20"/>
							<Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Toggle Button -->
	<Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<Viewbox Height="20" Width="20" Margin="0,6,0,0" Stretch="UniformToFill">
							<Canvas Height="512" Width="512">
								<Path Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource SecundaryIconColor}" Margin="0 0 0 0"/>
								<Path Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource SecundaryIconColor}" Margin="0 20 0 0"/>
								<Path Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource SecundaryIconColor}" Margin="0 40 0 0"/>
							</Canvas>
						</Viewbox>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="Transparent"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" TargetName="border" Value="Transparent"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Button | Minimize | Maximize | Close -->
	<Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Width" Value="25"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource PrimaryTextColor}" Height="10" Width="10" Stretch="Uniform"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="Tag" Value="IsCloseButton"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource ActionIconColor}"/>
							<Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>